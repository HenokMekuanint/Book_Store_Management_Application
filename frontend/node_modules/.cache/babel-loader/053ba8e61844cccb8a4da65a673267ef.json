{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./Reducers/ProductReducers\";\nimport { cartReducer } from \"./Reducers/CartReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Henok/final/frontend/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAmC,0BAAnC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAACJ,kBADgB;AAE5BK,EAAAA,cAAc,EAACJ,qBAFa;AAG5BK,EAAAA,IAAI,EAACJ;AAHuB,CAAD,CAA/B;AAOA,MAAMK,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADgC,GAEhC,EAFF;AAGA,MAAMG,YAAY,GAAC;AACfN,EAAAA,IAAI,EAAC;AACDO,IAAAA,SAAS,EAACN;AADT;AADU,CAAnB;AAKA,MAAMO,UAAU,GAAC,CAAChB,KAAD,CAAjB;AACA,MAAMiB,KAAK,GAACpB,WAAW,CACnBQ,OADmB,EAEnBS,YAFmB,EAGnBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAHA,CAAvB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore , combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport { productListReducer,productDetailsReducer } from \"./Reducers/ProductReducers\";\r\nimport { cartReducer } from \"./Reducers/CartReducer\";\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n: []\r\nconst initialState={\r\n    cart:{\r\n        cartItems:cartItemsFromLocalStorage\r\n    }\r\n}\r\nconst middleware=[thunk]  \r\nconst store=createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store"]},"metadata":{},"sourceType":"module"}