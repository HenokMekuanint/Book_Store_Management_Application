{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./Reducers/ProductReducers\";\nimport { cartReducer } from \"./Reducers/CartReducer\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer } from \"./Reducers/userReducer\";\nimport { userUpdateProfileReducer } from \"./Reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer } from \"./Reducers/OrderReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderP\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []; //login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null; //shippingAddress\n\nconst shippingAddressLocalStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Henok/final/frontend/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderP","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAmC,0BAAnC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,mBAA/C,QAA0E,wBAA1E;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,yBAAxD;AACA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC5Bc,EAAAA,WAAW,EAACV,kBADgB;AAE5BW,EAAAA,cAAc,EAACV,qBAFa;AAG5BW,EAAAA,IAAI,EAACV,WAHuB;AAI5BW,EAAAA,SAAS,EAACT,gBAJkB;AAK5BU,EAAAA,YAAY,EAACT,mBALe;AAM5BU,EAAAA,WAAW,EAACZ,kBANgB;AAO5Ba,EAAAA,iBAAiB,EAACV,wBAPU;AAQ5BW,EAAAA,WAAW,EAACV,kBARgB;AAS5BW,EAAAA,YAAY,EAACV,mBATe;AAU5BW,EAAAA,QAAQ,EAACC;AAVmB,CAAD,CAA/B;AAgBA,MAAMC,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADgC,GAEhC,EAFF,C,CAGA;;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD+B,GAE/B,IAFF,C,CAGA;;AACA,MAAMI,2BAA2B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAClCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADkC,GAElC,EAFF;AAKA,MAAMK,YAAY,GAAC;AACfhB,EAAAA,IAAI,EAAC;AACDiB,IAAAA,SAAS,EAACR,yBADT;AAEDS,IAAAA,eAAe,EAACH;AAFf,GADU;AAKfd,EAAAA,SAAS,EAAC;AAACkB,IAAAA,QAAQ,EAACL;AAAV;AALK,CAAnB;AAOA,MAAMM,UAAU,GAAC,CAAClC,KAAD,CAAjB;AACA,MAAMmC,KAAK,GAACtC,WAAW,CACnBc,OADmB,EAEnBmB,YAFmB,EAGnB7B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAHA,CAAvB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore , combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport { productListReducer,productDetailsReducer } from \"./Reducers/ProductReducers\";\r\nimport { cartReducer } from \"./Reducers/CartReducer\";\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer } from \"./Reducers/userReducer\";\r\nimport { userUpdateProfileReducer } from \"./Reducers/userReducer\";\r\nimport { orderCreateReducer, orderDetailsReducer } from \"./Reducers/OrderReducer\";\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderP,\r\n\r\n\r\n\r\n})\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n: [];\r\n//login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n: null;\r\n//shippingAddress\r\nconst shippingAddressLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n: {};\r\n\r\n\r\nconst initialState={\r\n    cart:{\r\n        cartItems:cartItemsFromLocalStorage,\r\n        shippingAddress:shippingAddressLocalStorage,\r\n    },\r\n    userLogin:{userInfo:userInfoFromLocalStorage }\r\n}\r\nconst middleware=[thunk]  \r\nconst store=createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store"]},"metadata":{},"sourceType":"module"}