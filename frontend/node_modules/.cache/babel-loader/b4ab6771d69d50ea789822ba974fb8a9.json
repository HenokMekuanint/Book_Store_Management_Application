{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_RESET, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from \"../Constants/UserConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //LOGOUT\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  document.location.href = \"/login\";\n}; //REGISTER\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //UPDATE PROFILE\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Henok/final/frontend/src/Redux/Actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_RESET","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","USER_"],"mappings":"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","sourcesContent":["import { USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL ,\r\n     USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_RESET,USER_DETAILS_FAIL,\r\n      USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL} from \"../Constants/UserConstants\";\r\nimport axios from \"axios\";\r\nexport const login = (email,password)=> async (dispatch)=>{\r\n    try{\r\n        dispatch({type:USER_LOGIN_REQUEST});\r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }\r\n        const {data}=await axios.post(`/api/users/login`,{email,password},config);\r\n\r\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data});\r\n        localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:\r\n            \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            :error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//LOGOUT\r\nexport const logout = () => async (dispatch)=>{\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({type:USER_LOGOUT});\r\n    dispatch({type:USER_DETAILS_RESET});\r\n\r\n    document.location.href=\"/login\";\r\n}\r\n\r\n//REGISTER\r\nexport const register = (name,email,password)=> async (dispatch)=>{\r\n    try{\r\n        dispatch({type:USER_REGISTER_REQUEST});\r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }\r\n        const {data}=await axios.post(`/api/users`,{name,email,password},config);\r\n\r\n        dispatch({type:USER_REGISTER_SUCCESS,payload:data});\r\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data});\r\n\r\n        localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            :error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//USER DETAILS\r\nexport const getUserDetails = (id)=> async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:USER_DETAILS_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data}=await axios.get(`/api/users/${id}`,config);\r\n\r\n        dispatch({type:USER_DETAILS_SUCCESS,payload:data});        \r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}\r\n//UPDATE PROFILE\r\nexport const updateUserProfile = (user)=> async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:USER_UPDATE_PROFILE_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data}=await axios.put(`/api/users/profile/`,user,config);\r\n\r\n        dispatch({type:USER_UPDATE_PROFILE_SUCCESS,payload:data});\r\n        dispatch({type:USER_,payload:data});\r\n\r\n        localStorage.setItem(\"userInfo\",JSON.stringify(data));    \r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}