{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henok\\\\final\\\\frontend\\\\src\\\\components\\\\profileComponents\\\\ProfileTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Toast from './../LoadingError/Toast';\nimport Message from './../LoadingError/Error';\nimport Loading from './../LoadingError/Loading';\nimport { toast } from \"react-toastify\";\nimport { updateUserProfile } from \"../../Redux/Actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileTabs = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const toastId = React.useRef(null);\n  const Toastobjects = {\n    pauseOnFocusLoss: false,\n    draggle: false,\n    pauseOnHover: false,\n    autoClose: 2000\n  };\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    loading: updateLoading\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      if (!toast.isActive(toastId.current)) {\n        toastId.current = toast.error(\"Passwords do not match\", Toastobjects);\n      }\n\n      toastId.current = toast.error(\"Passwords do not match\", Toastobjects);\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n\n      if (!toast.isActive(toastId.current)) {\n        toastId.current = toast.success(\"Passwords do not match\", Toastobjects);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"row  form-container\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-fn\",\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            required: true,\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-email\",\n            children: \"E-mail Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"email\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-pass\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"account-confirm-pass\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileTabs, \"U7Lsnj2ctvkuy1zZ8XXr9Jg8Qcg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileTabs;\nexport default ProfileTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileTabs\");","map":{"version":3,"sources":["C:/Users/Henok/final/frontend/src/components/profileComponents/ProfileTabs.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Toast","Message","Loading","toast","updateUserProfile","ProfileTabs","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","toastId","useRef","Toastobjects","pauseOnFocusLoss","draggle","pauseOnHover","autoClose","dispatch","userDetails","state","loading","error","user","userUpdateProfile","updateLoading","submitHandler","e","preventDefault","isActive","current","id","_id","success","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Toast from './../LoadingError/Toast';\r\nimport Message from './../LoadingError/Error';\r\nimport Loading from './../LoadingError/Loading';\r\nimport { toast } from \"react-toastify\";\r\nimport { updateUserProfile } from \"../../Redux/Actions/userActions\";\r\n\r\nconst ProfileTabs = () => {\r\n  const [name, setName]=useState(\"\");\r\n  const [email,setEmail]= useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const toastId = React.useRef(null);\r\n\r\n  const Toastobjects={\r\n    pauseOnFocusLoss:false,\r\n    draggle:false,\r\n    pauseOnHover:false,\r\n    autoClose:2000,\r\n  }\r\n  const dispatch=useDispatch();\r\n\r\n  const userDetails = useSelector((state)=> state.userDetails);\r\n  const { loading,error,user } = userDetails;\r\n\r\n\r\n  const  userUpdateProfile = useSelector((state)=> state. userUpdateProfile);\r\n  const { loading:updateLoading} =  userUpdateProfile;\r\n\r\n  useEffect(()=>{\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  },[dispatch,user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !==confirmPassword) {\r\n      if (!toast.isActive(toastId.current)) {\r\n        toastId.current = toast.error(\"Passwords do not match\",Toastobjects)\r\n\r\n      }\r\n      toastId.current = toast.error(\"Passwords do not match\",Toastobjects)\r\n    }\r\n    else{\r\n      dispatch(\r\n        updateUserProfile({id:user._id,name,email,password}))\r\n        if (!toast.isActive(toastId.current)) {\r\n          toastId.current = toast.success(\"Passwords do not match\",Toastobjects)\r\n  \r\n        }\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n    <Toast/>\r\n    {error && <Message variant=\"alert-danger\">{error}</Message>}\r\n    {loading && <Loading/>}\r\n      <form className=\"row  form-container\" onSubmit={submitHandler}>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-fn\">UserName</label>\r\n            <input className=\"form-control\" type=\"text\" required  value={name} onChange={(e)=>setName(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-email\">E-mail Address</label>\r\n            <input className=\"form-control\" type=\"email\"value={email} required onChange={(e)=>setEmail(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-pass\">New Password</label>\r\n            <input className=\"form-control\" type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"form\">\r\n            <label for=\"account-confirm-pass\">Confirm Password</label>\r\n            <input className=\"form-control\" type=\"password\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileTabs;\r\n"]},"metadata":{},"sourceType":"module"}