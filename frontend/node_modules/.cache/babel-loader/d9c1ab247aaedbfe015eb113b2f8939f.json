{"ast":null,"code":"import axios from \"axios\";\nimport { CART_CLEAR_ITEM } from \"../Constants/CartConstants\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL } from \"../Constants/OrderConstants\";\nimport { logout } from \"./userActions\"; //CREATE ORDER\n\nexport const createOrder = order => async (dispatch, getState) => {\n  console.log(data);\n\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"hena the great\");\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEM,\n      payload: data\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; //ORDER DETAILS\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //ORDER PAY\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n}; //USER ORDERS   \n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Henok/Book_Store_Management_Application/frontend/src/Redux/Actions/OrderActions.js"],"names":["axios","CART_CLEAR_ITEM","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","logout","createOrder","order","dispatch","getState","console","log","data","type","userLogin","userInfo","config","headers","Authorization","token","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { CART_CLEAR_ITEM } from \"../Constants/CartConstants\";\r\nimport { ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL,ORDER_CREATE_RESET,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_REQUEST,ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL } from \"../Constants/OrderConstants\";\r\nimport {logout} from \"./userActions\"\r\n\r\n\r\n\r\n\r\n//CREATE ORDER\r\nexport const createOrder = (order)=> async (dispatch,getState)=>{\r\n    console.log(data)\r\n    try{\r\n        dispatch({type:ORDER_CREATE_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        console.log(\"hena the great\");\r\n        const {data}=await axios.post(`/api/orders`,order,config);\r\n\r\n        dispatch({type:ORDER_CREATE_SUCCESS,payload:data});\r\n        dispatch({type:CART_CLEAR_ITEM,payload:data});\r\n\r\n        localStorage.removeItem(\"cartItems\");    \r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n//ORDER DETAILS\r\nexport const getOrderDetails = (id)=> async (dispatch,getState)=>{\r\n     try{\r\n        dispatch({type:ORDER_DETAILS_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data}=await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});\r\n\r\n        localStorage.removeItem(\"cartItems\");    \r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n//ORDER PAY\r\nexport const payOrder = (orderId,paymentResult)=> async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:ORDER_PAY_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data}=await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config);\r\n\r\n        dispatch({type:ORDER_PAY_SUCCESS,payload:data});\r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n//USER ORDERS   \r\nexport const listMyOrders = ()=> async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:ORDER_LIST_MY_REQUEST});\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        }= getState();\r\n        \r\n        const config = {\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n        const {data}=await axios.get(`/api/orders/`,config);\r\n\r\n        dispatch({type:ORDER_LIST_MY_SUCCESS,payload:data});\r\n    }catch(error){\r\n        const message = \r\n        error.response && error.response.data.message \r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload:message\r\n        })\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}